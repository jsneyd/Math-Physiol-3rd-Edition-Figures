%!PS-Adobe-2.0 EPSF-2.0%%BoundingBox: 0 0 404 234%%Creator: Igor%%Title: Graph0%%Creation Date: Tue, Nov 20, 2001 8:56 PM%%DocumentFonts:  (atend) %%EndComments0 234 translate  1 -1 scale/IgorSave save def1000 dict begin0 setgray 0 setlinecap1 setlinewidth 0 setlinejoin1 setmiterlimit [] 0 setdash/aw 0 def 	/ah 0 def/x0 0 def	/y0 0 def	/x1 0 def	/y1 0 def/rx0 0 def	/ry0 0 def	/rx1 0 def	/ry1 0 def/tmp0 0 def /tmp1 0 def/packedRed 0 def /packedGreen 0 def /packedBlue 0 def/x 0 def	/y 0 def	/w 0 def	/c 0 string def/rbak 1 def	/gbak 1 def	/bbak 1 def/rfor 0 def	/gfor 0 def	/bfor 0 def/bdef{bind def}bind def/ldef{load def}bdef/xdef{exch def}bdef/setuserscreendict 22 dict defsetuserscreendict begin/tempctm matrix def/temprot matrix def/tempscale matrix def/concatprocs{	/proc2 exch cvlit def	/proc1 exch cvlit def	/newproc proc1 length proc2 length add array def	newproc 0 proc1 putinterval	newproc proc1 length proc2 putinterval	newproc cvx}def/resmatrix matrix def/findresolution{	72 0 resmatrix defaultmatrix dtransform	/yres xdef /xres xdef	xres dup mul yres dup mul add sqrt}defend/setuserscreen{  setuserscreendict begin	/spotfunction xdef	/screenangle xdef	/cellsize xdef		/m tempctm currentmatrix def	/rm screenangle temprot rotate def	/sm cellsize dup tempscale scale def		sm rm m m concatmatrix m concatmatrix pop	1 0 m dtransform /y1 xdef /x1 xdef	/veclength x1 dup mul y1 dup mul add sqrt def	/frequency findresolution veclength div def	/newscreenangle y1 x1 atan def	m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt	{		{ neg } /spotfunction load concatprocs		/spotfunction xdef	} if	frequency newscreenangle /spotfunction load setscreen  end}def/setpatterndict 18 dict defsetpatterndict begin/bitison{	/ybit xdef /xbit xdef	/bytevalue bstring ybit bwidth mul xbit 8 idiv add get def	/mask 1 7 xbit 8 mod sub bitshift def	bytevalue mask and 0 ne}defend/bitpatternspotfunction{  setpatterndict begin	/y xdef /x xdef	/xindex x 1 add 2 div bpside mul cvi def	/yindex y 1 add 2 div bpside mul cvi def	xindex yindex bitison	{ /onbits onbits 1 add def 1 }	{ /offbits offbits 1 add def 0 }	ifelse  end}def/setpattern{  setpatterndict begin	/cellsz xdef	/angle xdef	/bwidth xdef	/bpside xdef	/bstring xdef		/onbits 0 def /offbits 0 def	cellsz angle /bitpatternspotfunction load setuserscreen	{} settransfer	offbits offbits onbits add div setgray  end}def/FillPattern{	% patternstring --	/pat xdef	gsave	pat 8 1 0 72 300 32 div div setpattern	fill	grestore}def/UseBack{ rbak gbak bbak setrgbcolor }bdef/UseFore{ rfor gfor bfor setrgbcolor }bdef/SetBack {/bbak xdef /gbak xdef /rbak xdef }bdef/SetFore {/bfor xdef /gfor xdef /rfor xdef }bdef/ps {setlinewidth} bdef	/clw {currentlinewidth} bdef/sd {0 setdash} bdef/mstroke {0 clw eq {newpath}{stroke} ifelse} bdef/_R{ .5 sub round .5 add}bdef/allign { transform _R exch _R exch itransform }bdef/L {allign lineto} bdef/M {allign moveto} bdef/addto { dup load exec 3 -1 roll add store }bdef/MacLine{		% xto yto xfrom yfrom MacLine --	newpath		% only handles horizontal or vertical lines	/y0 xdef /x0 xdef /y1 xdef /x1 xdef	x1 x0 sub abs	y1 y0 sub abs gt	{clw x1 x0 gt {/x1}{/x0}ifelse  addto  clw 2 div dup /y0 addto /y1 addto}	{clw y1 y0 gt {/y1}{/y0}ifelse  addto  clw 2 div dup /x0 addto /x1 addto}	ifelse	x0 y0 M	x1 y1 L	mstroke}bdef/FillPath{		% graylevel FillPath --   fills current path and leaves path alive	gsave	dup 1 exch sub		% glev 1-glev	rbak 2 index mul	rfor 2 index mul add	gbak 3 index mul	gfor 3 index mul add	bbak 4 index mul	bfor 4 index mul add	setrgbcolor	pop pop	fill	grestore}bdef/StrokePath{		% linejoin StrokePath --   strokes current path and leaves path alive	gsave	setlinejoin	mstroke	grestore}bdef/RectPath{		% x0 y0 x1 y1 RectPath -- sets current path to a rectange	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 y0 M	x1 y0 L	x1 y1 L	x0 y1 L	closepath}bdef/PaintRect{		% x0 y0 x1 y1 graylevel PaintRect --	gsave	5 1 roll	RectPath	FillPath	grestore}bdef% **** begin image stuff *****% The following are used for images. This has to be kept% in synch with corresponding code in ImageDisp.c.In particular% the expansion factor, 8, has to be in synch.% packedcolor is (red*256+green)*256+blue/SetPackedColor{	% packedcolor SetPackedColor --	dup 256 mod /tmp0 xdef	% extract blue	256 idiv	dup 256 mod /tmp1 xdef	% extract green	256 idiv 				% extract red	255 div /packedRed xdef	tmp1 255 div /packedGreen xdef	tmp0 255 div /packedBlue xdef}bdef/IR_FillRect{	gsave	newpath	rx0 ry0 M	rx1 ry0 L	rx1 ry1 L	rx0 ry1 L	closepath	packedRed packedGreen packedBlue setrgbcolor	fill	grestore}bdef/NewRectImageLine{	% x0 y0 x1 y1 packedcolor NewRectImageLine --	SetPackedColor	/ry1 xdef /rx1 xdef /ry0 xdef /rx0 xdef	% remember starting rectange for following calls		IR_FillRect}bdef/rx{		% xdist rx --	8 div	dup 0 lt	{ rx0 /rx1 xdef rx1 add /rx0 xdef }		% neg delta steps left	{ rx1 /rx0 xdef rx0 add /rx1 xdef }	ifelse	IR_FillRect}bdef/ry{		% ydist rr --	8 div	dup 0 lt	{ ry1 /ry0 xdef ry0 exch sub /ry1 xdef }		% neg delta steps down	{ ry0 /ry1 xdef ry1 exch sub /ry0 xdef }	ifelse	IR_FillRect}bdef/cx{		% xdist packedcolor cx --	SetPackedColor	rx}bdef/cy{		% ydist packedcolor cx --	SetPackedColor	ry}bdef% **** end image stuff *****/EraseRect{		% x0 y0 x1 y1 EraseRect --  fills rect with background color	gsave	RectPath	UseBack fill	grestore}bdef/FrameRect{		% x0 y0 x1 y1 FrameRect --	RectPath	mstroke}bdef/FrameMacRect{		% x0 y0 x1 y1 FrameMacRect --  Mac-like version	RectPath	mstroke}bdef/ellipse{	/savematrix matrix currentmatrix def	translate scale 0 0 1 0 360 arc	savematrix setmatrix}bdef/OvalPath{		% x0 y0 x1 y1 OvalPath -- sets current path to an oval inside rectange	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 x1 sub abs 2 div y0 y1 sub abs 2 div x0 x1 add 2 div y0 y1 add 2 div ellipse	closepath}bdef/PaintOval{		% x0 y0 x1 y1 graylevel PaintOval --	gsave	5 1 roll	OvalPath	FillPath	grestore}bdef/EraseOval{		% x0 y0 x1 y1 EraseOval --  fills with background color	gsave	OvalPath	UseBack fill	grestore}bdef/FrameOval{		% x0 y0 x1 y1 FrameOval --	OvalPath	mstroke}bdef/RRectPath{		% x0 y0 x1 y1 r OvalPath -- sets current path to rounded rectange, radius r	/radius xdef	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 radius add y0 M	x1 y0 x1 y1 radius arcto 4{pop}repeat	x1 y1 x0 y1 radius arcto 4{pop}repeat	x0 y1 x0 y0 radius arcto 4{pop}repeat	x0 y0 x1 y0 radius arcto 4{pop}repeat	closepath}bdef/PaintRRect{		% x0 y0 x1 y1 r graylevel PaintRRect --	gsave	6 1 roll	RRectPath	FillPath	grestore}bdef/EraseRRect{		% x0 y0 x1 y1 r EraseRRect --  fills rect with background color	gsave	RRectPath	UseBack fill	grestore}bdef/FrameRRect{		% x0 y0 x1 y1 r FrameRect --	RRectPath	mstroke}bdef/CapLine{		% x0 y0 x1 y1 linecap CapLine -- draws line using given line cap	gsave	setlinecap	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 y0 M	x1 y1 L	mstroke	grestore}bdef/Arrow{		% x0 y0 x1 y1 width height graylevel Arrow -- draws arrow at end of line from P0 to P1	gsave	/gl xdef 1 add /aw xdef 1 add /ah xdef /y0 xdef /x0 xdef /y1 xdef /x1 xdef 	x0 y0 translate	/x1 x1 x0 sub def	/y1 y1 y0 sub def	y1 x1 atan rotate	newpath	0 0 M	aw ah 2 div L	aw ah 2 div neg L	closepath	gl FillPath%	10 setmiterlimit%	1 ps%	0 StrokePath	grestore}bdef% ************ fonts ************/normal 0 def/bold 1 def/italic 2 def/underline 4 def/outline 8 def/shadow 16 def/FACE1 bold italic or def/FACE2 outline shadow or def/Shadow {	gsave	siz 0.08 mul 1 index mul x add	exch siz 0.07 mul mul y add M	c show	grestore} def/Outline {	gsave	siz .02 mul setlinewidth	x y M c true charpath	gsave UseBack fill grestore stroke	grestore} def/Underline{	gsave	siz 0.08 mul ps	x y clw add M x c stringwidth pop add y clw add L stroke	grestore}bdef/DoShow{	% assumes x,y,c are already set	fontkind FACE2 and	dup normal eq 				{c x y M show} if	dup outline eq 				{Outline} if	dup shadow eq 				{1 Shadow Outline} if	outline shadow or eq 		{1 Shadow 1.5 Shadow Outline} if	fontkind underline and 0 ne { Underline } if}bdef/DoWShow{	% assumes x,y,c & w are already set	gsave	x y translate	/x 0 def  /y 0 def	w c stringwidth pop div 1 scale	DoShow	grestore}bdef/S{	/y xdef /x xdef /c xdef	DoShow}bdef/WS{		% string x y desiredwidth WS -	/w xdef /y xdef /x xdef /c xdef	DoWShow}bdef/F{	/fontkind xdef	findfont exch /siz xdef [siz 0 0 siz neg  0 0] makefont setfont}bdef/Re-encode {	dup length array copy	/eap 0 def	exch {		dup type /integertype eq		{ /eap xdef }		{			1 index			exch			eap exch			put			/eap eap 1 add def		}		ifelse	} forall} bind def[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron]/zzz xdef/OurEncoding{ zzz StandardEncoding Re-encode }bdef/EncodeFont	{	findfont	dup length dict begin	{		1 index /FID ne		{ def }		{ pop pop }		ifelse	} forall	/FontName xdef	/Encoding xdef	FontName currentdict	end	definefont pop} bind def/AnObj save def1 1 1 SetBack   0 0 0 SetFore  UseFore0 0 translate1.00 psgsave 1.00 ps 52.88 12.50 52.88 195.00 0 CapLine grestore1 ps1.00 psgsave 1.00 ps 45.38 12.50 53.38 12.50 0 CapLine grestore1 ps OurEncoding /_Geneva /Geneva EncodeFont10.00 (_Geneva) 0 F(2.0) 25.63 16.25 16.25 WS1.00 psgsave 1.00 ps 45.38 57.88 53.38 57.88 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(1.5) 25.63 61.63 16.25 WS1.00 psgsave 1.00 ps 45.38 103.25 53.38 103.25 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(1.0) 25.63 107.00 16.25 WS1.00 psgsave 1.00 ps 45.38 148.62 53.38 148.62 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(0.5) 25.63 152.38 16.25 WS1.00 psgsave 1.00 ps 45.38 194.00 53.38 194.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(0.0) 25.63 197.75 16.25 WS10.00 (_Geneva) 0 F(q) 12.00 106.00 6.00 WS1.00 psgsave 1.00 ps 52.38 195.50 376.50 195.50 0 CapLine grestore1 ps1.00 psgsave 1.00 ps 376.50 203.00 376.50 195.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(18.0) 365.00 217.00 23.00 WS1.00 psgsave 1.00 ps 296.00 203.00 296.00 195.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(17.5) 284.50 217.00 23.00 WS1.00 psgsave 1.00 ps 215.37 203.00 215.37 195.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(17.0) 203.88 217.00 23.00 WS1.00 psgsave 1.00 ps 134.87 203.00 134.87 195.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(16.5) 123.38 217.00 23.00 WS1.00 psgsave 1.00 ps 54.38 203.00 54.38 195.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(16.0) 42.88 217.00 23.00 WS10.00 (_Geneva) 0 F(P) 210.63 228.88 5.75 WS7.00 (_Geneva) 0 F(c) 216.38 232.25 3.75 WS1.00 psnewpath 376.50 12.50 M371.25 18.50 L366.13 24.25 L361.12 29.87 L356.38 35.25 L351.75 40.50 L347.25 45.50 L342.88 50.38 L338.63 55.13 L334.63 59.63 L330.75 64.13 L326.88 68.38 L323.25 72.50 L319.75 76.50 L316.25 80.38 L313.00 84.13 L309.75 87.75 L306.63 91.25 L303.63 94.62 L300.75 97.88 L297.88 101.00 L295.25 104.13 L292.63 107.00 L290.00 109.87 L287.63 112.63 L285.25 115.38 L282.88 117.88 L280.75 120.38 L278.50 122.88 L276.50 125.13 L274.50 127.38 L272.50 129.63 L270.63 131.75 L268.88 133.75 L267.13 135.75 L265.38 137.63 L263.75 139.50 L262.13 141.38 L260.63 143.00 L259.13 144.75 L257.63 146.37 L256.25 147.88 L255.00 149.38 L253.63 150.88 L252.38 152.25 L251.13 153.62 L250.00 155.00 L248.88 156.25 L247.75 157.50 L246.63 158.75 L245.63 159.87 L244.63 161.00 L243.75 162.13 L242.75 163.12 L241.88 164.13 L241.00 165.13 L240.13 166.00 L239.38 167.00 L238.50 167.88 L237.75 168.75 L237.00 169.50 L236.38 170.38 L235.63 171.13 L235.00 171.87 L234.38 172.63 L233.75 173.25 L233.13 174.00 L232.50 174.63 L231.88 175.25 L231.38 175.88 L230.88 176.50 L230.38 177.00 L229.87 177.63 L229.38 178.12 L228.88 178.62 L228.50 179.13 L228.00 179.63 L227.63 180.13 L227.25 180.50 L226.75 181.00 L226.38 181.38 L226.00 181.75 L225.75 182.13 L225.38 182.50 L225.00 182.88 L224.75 183.25 L224.38 183.62 L224.13 184.00 L223.75 184.25 L223.50 184.63 L223.25 184.87 L223.00 185.13 L222.75 185.50 L222.50 185.75 L222.25 186.00 L222.00 186.25 L221.75 186.50 L221.50 186.75 L221.38 186.88 L221.13 187.13 L220.88 187.38 L220.75 187.63 L220.50 187.75 L220.38 188.00 L220.13 188.12 L220.00 188.25 L219.87 188.50 L219.63 188.63 L219.50 188.75 L219.38 189.00 L219.25 189.13 L219.13 189.25 L218.88 189.37 L218.75 189.50 L218.63 189.63 L218.50 189.75 L218.38 189.87 L218.25 190.00 L218.13 190.13 L218.00 190.13 L218.00 190.25 L217.88 190.38 L217.75 190.50 L217.63 190.50 L217.50 190.62 L217.37 190.62 L217.37 190.75 L217.25 190.88 L217.13 190.88 L217.00 191.00 L216.88 191.12 L216.75 191.12 L216.63 191.25 L216.50 191.25 L216.38 191.38 L216.25 191.38 L216.13 191.38 L216.13 191.50 L216.00 191.50 L215.88 191.50 L215.75 191.50 L215.63 191.50 L215.50 191.50 L215.37 191.50 L215.25 191.50 L215.13 191.50 L215.00 191.50 L214.88 191.50 L214.75 191.50 L214.75 191.38 L214.63 191.38 L214.50 191.38 L214.38 191.25 L214.25 191.25 L214.13 191.12 L214.00 191.12 L213.88 191.00 L213.75 190.88 L213.62 190.88 L213.50 190.75 L213.50 190.62 L213.38 190.62 L213.25 190.50 L213.13 190.50 L213.00 190.38 L212.88 190.25 L212.88 190.13 L212.75 190.13 L212.63 190.00 L212.50 189.87 L212.38 189.75 L212.25 189.63 L212.13 189.50 L212.00 189.37 L211.75 189.25 L211.63 189.13 L211.50 189.00 L211.38 188.75 L211.25 188.63 L211.00 188.50 L210.88 188.25 L210.75 188.12 Lmstrokenewpath 210.75 188.12 M210.50 188.00 L210.38 187.75 L210.13 187.63 L210.00 187.38 L209.75 187.13 L209.50 186.88 L209.38 186.75 L209.12 186.50 L208.88 186.25 L208.63 186.00 L208.38 185.75 L208.13 185.50 L207.88 185.13 L207.63 184.87 L207.37 184.63 L207.13 184.25 L206.75 184.00 L206.50 183.62 L206.13 183.25 L205.88 182.88 L205.50 182.50 L205.13 182.13 L204.87 181.75 L204.50 181.38 L204.13 181.00 L203.63 180.50 L203.25 180.13 L202.87 179.63 L202.38 179.13 L202.00 178.62 L201.50 178.12 L201.00 177.63 L200.50 177.00 L200.00 176.50 L199.50 175.88 L199.00 175.25 L198.38 174.63 L197.75 174.00 L197.13 173.25 L196.50 172.63 L195.88 171.87 L195.25 171.13 L194.50 170.38 L193.88 169.50 L193.13 168.75 L192.37 167.88 L191.50 167.00 L190.75 166.00 L189.87 165.13 L189.00 164.13 L188.12 163.12 L187.13 162.13 L186.25 161.00 L185.25 159.87 L184.25 158.75 L183.12 157.50 L182.00 156.25 L180.88 155.00 L179.75 153.62 L178.50 152.25 L177.25 150.88 L175.88 149.38 L174.63 147.88 L173.25 146.37 L171.75 144.75 L170.25 143.00 L168.75 141.38 L167.13 139.50 L165.50 137.63 L163.75 135.75 L162.00 133.75 L160.25 131.75 L158.38 129.63 L156.38 127.38 L154.38 125.13 L152.38 122.88 L150.13 120.38 L148.00 117.88 L145.63 115.38 L143.25 112.63 L140.88 109.87 L138.25 107.00 L135.63 104.13 L133.00 101.00 L130.13 97.88 L127.25 94.62 L124.25 91.25 L121.13 87.75 L117.88 84.13 L114.63 80.38 L111.12 76.50 L107.63 72.50 L104.00 68.38 L100.13 64.13 L96.25 59.63 L92.25 55.13 L88.00 50.38 L83.62 45.50 L79.13 40.50 L74.50 35.25 L69.75 29.87 L64.75 24.25 L59.63 18.50 L54.38 12.50 Lmstroke[] sd1 psgsave 0.25 ps 340.25 12.50 369.13 12.50 0 CapLine grestore340.25 12.75 374.63 12.75 2.75 5.50 0 Arrow331.00 6.25 349.63 18.75 EraseRect10.00 (_Geneva) 0 F(x=0) 331.00 16.25 18.62 WSgsave 0.25 ps 86.63 11.50 61.75 12.38 0 CapLine grestore86.63 11.75 56.25 12.75 2.75 5.50 0 Arrow77.75 5.25 95.50 17.75 EraseRect10.00 (_Geneva) 0 F(x=L) 77.75 15.25 17.75 WSAnObj restoreendIgorSave restore%%DocumentFonts: Geneva