%!PS-Adobe-2.0 EPSF-2.0%%BoundingBox: 0 0 422 238%%Creator: Igor%%Title: Graph1%%Creation Date: Tue, Nov 20, 2001 8:57 PM%%DocumentFonts:  (atend) %%EndComments0 238 translate  1 -1 scale/IgorSave save def1000 dict begin0 setgray 0 setlinecap1 setlinewidth 0 setlinejoin1 setmiterlimit [] 0 setdash/aw 0 def 	/ah 0 def/x0 0 def	/y0 0 def	/x1 0 def	/y1 0 def/rx0 0 def	/ry0 0 def	/rx1 0 def	/ry1 0 def/tmp0 0 def /tmp1 0 def/packedRed 0 def /packedGreen 0 def /packedBlue 0 def/x 0 def	/y 0 def	/w 0 def	/c 0 string def/rbak 1 def	/gbak 1 def	/bbak 1 def/rfor 0 def	/gfor 0 def	/bfor 0 def/bdef{bind def}bind def/ldef{load def}bdef/xdef{exch def}bdef/setuserscreendict 22 dict defsetuserscreendict begin/tempctm matrix def/temprot matrix def/tempscale matrix def/concatprocs{	/proc2 exch cvlit def	/proc1 exch cvlit def	/newproc proc1 length proc2 length add array def	newproc 0 proc1 putinterval	newproc proc1 length proc2 putinterval	newproc cvx}def/resmatrix matrix def/findresolution{	72 0 resmatrix defaultmatrix dtransform	/yres xdef /xres xdef	xres dup mul yres dup mul add sqrt}defend/setuserscreen{  setuserscreendict begin	/spotfunction xdef	/screenangle xdef	/cellsize xdef		/m tempctm currentmatrix def	/rm screenangle temprot rotate def	/sm cellsize dup tempscale scale def		sm rm m m concatmatrix m concatmatrix pop	1 0 m dtransform /y1 xdef /x1 xdef	/veclength x1 dup mul y1 dup mul add sqrt def	/frequency findresolution veclength div def	/newscreenangle y1 x1 atan def	m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt	{		{ neg } /spotfunction load concatprocs		/spotfunction xdef	} if	frequency newscreenangle /spotfunction load setscreen  end}def/setpatterndict 18 dict defsetpatterndict begin/bitison{	/ybit xdef /xbit xdef	/bytevalue bstring ybit bwidth mul xbit 8 idiv add get def	/mask 1 7 xbit 8 mod sub bitshift def	bytevalue mask and 0 ne}defend/bitpatternspotfunction{  setpatterndict begin	/y xdef /x xdef	/xindex x 1 add 2 div bpside mul cvi def	/yindex y 1 add 2 div bpside mul cvi def	xindex yindex bitison	{ /onbits onbits 1 add def 1 }	{ /offbits offbits 1 add def 0 }	ifelse  end}def/setpattern{  setpatterndict begin	/cellsz xdef	/angle xdef	/bwidth xdef	/bpside xdef	/bstring xdef		/onbits 0 def /offbits 0 def	cellsz angle /bitpatternspotfunction load setuserscreen	{} settransfer	offbits offbits onbits add div setgray  end}def/FillPattern{	% patternstring --	/pat xdef	gsave	pat 8 1 0 72 300 32 div div setpattern	fill	grestore}def/UseBack{ rbak gbak bbak setrgbcolor }bdef/UseFore{ rfor gfor bfor setrgbcolor }bdef/SetBack {/bbak xdef /gbak xdef /rbak xdef }bdef/SetFore {/bfor xdef /gfor xdef /rfor xdef }bdef/ps {setlinewidth} bdef	/clw {currentlinewidth} bdef/sd {0 setdash} bdef/mstroke {0 clw eq {newpath}{stroke} ifelse} bdef/_R{ .5 sub round .5 add}bdef/allign { transform _R exch _R exch itransform }bdef/L {allign lineto} bdef/M {allign moveto} bdef/addto { dup load exec 3 -1 roll add store }bdef/MacLine{		% xto yto xfrom yfrom MacLine --	newpath		% only handles horizontal or vertical lines	/y0 xdef /x0 xdef /y1 xdef /x1 xdef	x1 x0 sub abs	y1 y0 sub abs gt	{clw x1 x0 gt {/x1}{/x0}ifelse  addto  clw 2 div dup /y0 addto /y1 addto}	{clw y1 y0 gt {/y1}{/y0}ifelse  addto  clw 2 div dup /x0 addto /x1 addto}	ifelse	x0 y0 M	x1 y1 L	mstroke}bdef/FillPath{		% graylevel FillPath --   fills current path and leaves path alive	gsave	dup 1 exch sub		% glev 1-glev	rbak 2 index mul	rfor 2 index mul add	gbak 3 index mul	gfor 3 index mul add	bbak 4 index mul	bfor 4 index mul add	setrgbcolor	pop pop	fill	grestore}bdef/StrokePath{		% linejoin StrokePath --   strokes current path and leaves path alive	gsave	setlinejoin	mstroke	grestore}bdef/RectPath{		% x0 y0 x1 y1 RectPath -- sets current path to a rectange	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 y0 M	x1 y0 L	x1 y1 L	x0 y1 L	closepath}bdef/PaintRect{		% x0 y0 x1 y1 graylevel PaintRect --	gsave	5 1 roll	RectPath	FillPath	grestore}bdef% **** begin image stuff *****% The following are used for images. This has to be kept% in synch with corresponding code in ImageDisp.c.In particular% the expansion factor, 8, has to be in synch.% packedcolor is (red*256+green)*256+blue/SetPackedColor{	% packedcolor SetPackedColor --	dup 256 mod /tmp0 xdef	% extract blue	256 idiv	dup 256 mod /tmp1 xdef	% extract green	256 idiv 				% extract red	255 div /packedRed xdef	tmp1 255 div /packedGreen xdef	tmp0 255 div /packedBlue xdef}bdef/IR_FillRect{	gsave	newpath	rx0 ry0 M	rx1 ry0 L	rx1 ry1 L	rx0 ry1 L	closepath	packedRed packedGreen packedBlue setrgbcolor	fill	grestore}bdef/NewRectImageLine{	% x0 y0 x1 y1 packedcolor NewRectImageLine --	SetPackedColor	/ry1 xdef /rx1 xdef /ry0 xdef /rx0 xdef	% remember starting rectange for following calls		IR_FillRect}bdef/rx{		% xdist rx --	8 div	dup 0 lt	{ rx0 /rx1 xdef rx1 add /rx0 xdef }		% neg delta steps left	{ rx1 /rx0 xdef rx0 add /rx1 xdef }	ifelse	IR_FillRect}bdef/ry{		% ydist rr --	8 div	dup 0 lt	{ ry1 /ry0 xdef ry0 exch sub /ry1 xdef }		% neg delta steps down	{ ry0 /ry1 xdef ry1 exch sub /ry0 xdef }	ifelse	IR_FillRect}bdef/cx{		% xdist packedcolor cx --	SetPackedColor	rx}bdef/cy{		% ydist packedcolor cx --	SetPackedColor	ry}bdef% **** end image stuff *****/EraseRect{		% x0 y0 x1 y1 EraseRect --  fills rect with background color	gsave	RectPath	UseBack fill	grestore}bdef/FrameRect{		% x0 y0 x1 y1 FrameRect --	RectPath	mstroke}bdef/FrameMacRect{		% x0 y0 x1 y1 FrameMacRect --  Mac-like version	RectPath	mstroke}bdef/ellipse{	/savematrix matrix currentmatrix def	translate scale 0 0 1 0 360 arc	savematrix setmatrix}bdef/OvalPath{		% x0 y0 x1 y1 OvalPath -- sets current path to an oval inside rectange	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 x1 sub abs 2 div y0 y1 sub abs 2 div x0 x1 add 2 div y0 y1 add 2 div ellipse	closepath}bdef/PaintOval{		% x0 y0 x1 y1 graylevel PaintOval --	gsave	5 1 roll	OvalPath	FillPath	grestore}bdef/EraseOval{		% x0 y0 x1 y1 EraseOval --  fills with background color	gsave	OvalPath	UseBack fill	grestore}bdef/FrameOval{		% x0 y0 x1 y1 FrameOval --	OvalPath	mstroke}bdef/RRectPath{		% x0 y0 x1 y1 r OvalPath -- sets current path to rounded rectange, radius r	/radius xdef	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 radius add y0 M	x1 y0 x1 y1 radius arcto 4{pop}repeat	x1 y1 x0 y1 radius arcto 4{pop}repeat	x0 y1 x0 y0 radius arcto 4{pop}repeat	x0 y0 x1 y0 radius arcto 4{pop}repeat	closepath}bdef/PaintRRect{		% x0 y0 x1 y1 r graylevel PaintRRect --	gsave	6 1 roll	RRectPath	FillPath	grestore}bdef/EraseRRect{		% x0 y0 x1 y1 r EraseRRect --  fills rect with background color	gsave	RRectPath	UseBack fill	grestore}bdef/FrameRRect{		% x0 y0 x1 y1 r FrameRect --	RRectPath	mstroke}bdef/CapLine{		% x0 y0 x1 y1 linecap CapLine -- draws line using given line cap	gsave	setlinecap	/y1 xdef /x1 xdef /y0 xdef /x0 xdef	newpath	x0 y0 M	x1 y1 L	mstroke	grestore}bdef/Arrow{		% x0 y0 x1 y1 width height graylevel Arrow -- draws arrow at end of line from P0 to P1	gsave	/gl xdef 1 add /aw xdef 1 add /ah xdef /y0 xdef /x0 xdef /y1 xdef /x1 xdef 	x0 y0 translate	/x1 x1 x0 sub def	/y1 y1 y0 sub def	y1 x1 atan rotate	newpath	0 0 M	aw ah 2 div L	aw ah 2 div neg L	closepath	gl FillPath%	10 setmiterlimit%	1 ps%	0 StrokePath	grestore}bdef% ************ fonts ************/normal 0 def/bold 1 def/italic 2 def/underline 4 def/outline 8 def/shadow 16 def/FACE1 bold italic or def/FACE2 outline shadow or def/Shadow {	gsave	siz 0.08 mul 1 index mul x add	exch siz 0.07 mul mul y add M	c show	grestore} def/Outline {	gsave	siz .02 mul setlinewidth	x y M c true charpath	gsave UseBack fill grestore stroke	grestore} def/Underline{	gsave	siz 0.08 mul ps	x y clw add M x c stringwidth pop add y clw add L stroke	grestore}bdef/DoShow{	% assumes x,y,c are already set	fontkind FACE2 and	dup normal eq 				{c x y M show} if	dup outline eq 				{Outline} if	dup shadow eq 				{1 Shadow Outline} if	outline shadow or eq 		{1 Shadow 1.5 Shadow Outline} if	fontkind underline and 0 ne { Underline } if}bdef/DoWShow{	% assumes x,y,c & w are already set	gsave	x y translate	/x 0 def  /y 0 def	w c stringwidth pop div 1 scale	DoShow	grestore}bdef/S{	/y xdef /x xdef /c xdef	DoShow}bdef/WS{		% string x y desiredwidth WS -	/w xdef /y xdef /x xdef /c xdef	DoWShow}bdef/F{	/fontkind xdef	findfont exch /siz xdef [siz 0 0 siz neg  0 0] makefont setfont}bdef/Re-encode {	dup length array copy	/eap 0 def	exch {		dup type /integertype eq		{ /eap xdef }		{			1 index			exch			eap exch			put			/eap eap 1 add def		}		ifelse	} forall} bind def[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron]/zzz xdef/OurEncoding{ zzz StandardEncoding Re-encode }bdef/EncodeFont	{	findfont	dup length dict begin	{		1 index /FID ne		{ def }		{ pop pop }		ifelse	} forall	/FontName xdef	/Encoding xdef	FontName currentdict	end	definefont pop} bind def/AnObj save def1 1 1 SetBack   0 0 0 SetFore  UseFore0 0 translate1.00 psgsave 1.00 ps 52.88 12.50 52.88 199.00 0 CapLine grestore1 ps1.00 psgsave 1.00 ps 45.38 28.00 53.38 28.00 0 CapLine grestore1 ps OurEncoding /_Geneva /Geneva EncodeFont10.00 (_Geneva) 0 F(2.2) 25.63 31.75 16.25 WS1.00 psgsave 1.00 ps 45.38 68.50 53.38 68.50 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(2.0) 25.63 72.25 16.25 WS1.00 psgsave 1.00 ps 45.38 108.87 53.38 108.87 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(1.8) 25.63 112.63 16.25 WS1.00 psgsave 1.00 ps 45.38 149.38 53.38 149.38 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(1.6) 25.63 153.13 16.25 WS1.00 psgsave 1.00 ps 45.38 189.75 53.38 189.75 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(1.4) 25.63 193.50 16.25 WS10.00 (_Geneva) 0 F(q) 11.00 108.50 6.00 WS1.00 psgsave 1.00 ps 52.38 199.50 393.50 199.50 0 CapLine grestore1 ps1.00 psgsave 1.00 ps 351.25 207.00 351.25 199.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(26) 344.63 221.00 13.25 WS1.00 psgsave 1.00 ps 297.75 207.00 297.75 199.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(24) 291.13 221.00 13.25 WS1.00 psgsave 1.00 ps 244.38 207.00 244.38 199.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(22) 237.75 221.00 13.25 WS1.00 psgsave 1.00 ps 190.88 207.00 190.88 199.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(20) 184.25 221.00 13.25 WS1.00 psgsave 1.00 ps 137.38 207.00 137.38 199.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(18) 130.75 221.00 13.25 WS1.00 psgsave 1.00 ps 84.00 207.00 84.00 199.00 0 CapLine grestore1 ps10.00 (_Geneva) 0 F(16) 77.37 221.00 13.25 WS10.00 (_Geneva) 0 F(P) 219.63 232.88 5.75 WS7.00 (_Geneva) 0 F(c) 225.38 236.25 3.75 WS1.00 ps[ 2 2 ] sdnewpath 55.38 36.13 M57.25 37.25 L75.00 48.25 L57.25 37.25 L75.00 48.25 L90.63 57.25 L101.50 63.38 L90.63 57.25 L101.50 63.38 L124.00 75.50 L129.87 78.50 L124.00 75.50 L129.87 78.50 L157.50 92.12 L160.63 93.75 L157.50 92.12 L160.63 93.75 L190.88 107.50 L193.88 108.87 L190.88 107.50 L193.88 108.87 L224.25 121.63 L230.00 124.00 L224.25 121.63 L230.00 124.00 L257.75 134.75 L269.38 139.25 L257.75 134.75 L269.38 139.25 L291.13 146.88 L312.63 154.38 L291.13 146.88 L312.63 154.38 L324.50 158.13 L357.88 168.88 L324.50 158.13 L360.13 169.50 L357.88 168.88 L360.13 169.50 L391.38 178.50 L393.50 179.13 Lmstrokenewpath 393.50 179.13 M391.38 178.50 L393.50 179.13 Lmstroke[] sd1 ps1.20 psnewpath 337.88 68.50 M336.75 123.88 L335.63 141.88 L334.63 150.75 L333.63 155.50 L332.50 157.88 L331.50 159.13 L330.50 159.50 L329.50 159.63 L328.38 159.50 L327.38 159.25 L326.37 159.00 L325.25 158.75 L324.25 158.38 L323.25 158.00 L322.25 157.75 L321.13 157.38 L320.12 157.00 L319.00 156.63 L318.00 156.38 L317.00 156.00 L315.88 155.63 L314.88 155.25 L313.88 155.00 L312.75 154.63 L311.75 154.25 L310.63 153.88 L309.63 153.50 L308.50 153.13 L307.50 152.88 L306.50 152.50 L305.38 152.13 L304.38 151.75 L303.25 151.37 L302.25 151.00 L301.13 150.63 L300.13 150.25 L299.00 149.88 L297.88 149.50 L296.88 149.13 L295.75 148.75 L294.75 148.50 L293.63 148.13 L292.63 147.75 L291.50 147.37 L290.38 147.00 L289.38 146.50 L288.25 146.13 L287.13 145.75 L286.12 145.38 L285.00 145.00 L283.88 144.63 L282.88 144.25 L281.75 143.88 L280.63 143.50 L279.63 143.13 L278.50 142.75 L277.38 142.37 L276.25 141.88 L275.25 141.50 L274.13 141.12 L273.00 140.75 L271.88 140.38 L270.88 139.88 L269.75 139.50 L268.63 139.13 L267.50 138.75 L266.38 138.25 L265.25 137.88 L264.25 137.50 L263.13 137.13 L262.00 136.63 L260.88 136.25 L259.75 135.88 L258.63 135.38 L257.50 135.00 L256.38 134.63 L255.25 134.13 L254.13 133.75 L253.00 133.25 L251.88 132.88 L250.75 132.50 L249.63 132.00 L248.50 131.63 L247.38 131.13 L246.25 130.75 L245.13 130.25 L244.00 129.87 L242.88 129.38 L241.75 129.00 L240.63 128.50 L239.50 128.00 L238.38 127.62 L237.25 127.13 L236.00 126.75 L234.88 126.25 L233.75 125.75 L232.63 125.38 L231.50 124.88 L230.38 124.38 L229.13 124.00 L228.00 123.50 L226.88 123.00 L225.75 122.63 L224.50 122.13 L223.38 121.63 L222.25 121.13 L221.00 120.63 L219.87 120.25 L218.75 119.75 L217.50 119.25 L216.38 118.75 L215.25 118.25 L214.00 117.75 L212.88 117.25 L211.75 116.88 L210.50 116.37 L209.38 115.88 L208.13 115.38 L207.00 114.88 L205.75 114.38 L204.63 113.88 L203.38 113.38 L202.25 112.88 L201.00 112.25 L199.88 111.75 L198.62 111.25 L197.50 110.75 L196.25 110.25 L195.00 109.75 L193.88 109.25 L192.63 108.63 L191.50 108.13 L190.25 107.63 L189.00 107.13 L187.88 106.50 L186.63 106.00 L185.38 105.50 L184.13 105.00 L183.00 104.38 L181.75 103.87 L180.50 103.25 L179.25 102.75 L178.12 102.25 L176.87 101.62 L175.62 101.13 L174.38 100.50 L173.13 100.00 L171.87 99.38 L170.75 98.87 L169.50 98.25 L168.25 97.62 L167.00 97.13 L165.75 96.50 L164.50 96.00 L163.25 95.38 L162.00 94.75 L160.75 94.13 L159.50 93.62 L158.25 93.00 L157.00 92.37 L155.75 91.75 L154.50 91.25 L153.25 90.63 L152.00 90.00 L150.63 89.38 L149.38 88.75 L148.13 88.13 L146.88 87.50 L145.63 86.88 L144.38 86.25 L143.00 85.63 L141.75 85.00 L140.50 84.38 L139.25 83.75 L137.88 83.13 L136.63 82.37 L135.38 81.75 L134.00 81.12 L132.75 80.50 L131.38 79.75 L130.13 79.13 L128.88 78.50 L127.50 77.75 L126.25 77.13 L124.88 76.50 L123.62 75.75 L122.25 75.12 L121.00 74.37 L119.63 73.75 L118.38 73.00 L117.00 72.37 L115.63 71.63 L114.38 70.88 L113.00 70.25 L111.75 69.50 Lmstrokenewpath 111.75 69.50 M110.38 68.75 L109.00 68.12 L107.75 67.37 L106.38 66.63 L105.00 65.88 Lmstroke[] sd1 psgsave 0.25 ps 99.13 15.50 79.50 42.00 0 CapLine grestore99.25 15.63 76.25 46.75 2.87 5.75 0 Arrow67.25 9.25 131.00 21.75 EraseRect10.00 (_Geneva) 0 F(q'=0 nullcline) 67.25 19.25 63.75 WSgsave 0.25 ps 93.50 93.13 99.50 70.75 0 CapLine grestore93.75 93.13 101.25 65.25 2.87 5.75 0 Arrow84.62 86.88 102.38 99.38 EraseRect10.00 (_Geneva) 0 F(x=L) 84.62 96.88 17.75 WSgsave 0.25 ps 311.75 55.63 331.00 65.12 0 CapLine grestore311.88 55.88 336.25 67.88 2.87 5.75 0 Arrow302.50 49.38 321.13 61.88 EraseRect10.00 (_Geneva) 0 F(x=0) 302.50 59.38 18.62 WSAnObj restoreendIgorSave restore%%DocumentFonts: Geneva